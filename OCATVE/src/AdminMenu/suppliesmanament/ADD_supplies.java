/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package AdminMenu.suppliesmanament;

import AdminMenu.Admin;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ocatve.DatabaseManager;

/**
 *
 * @author Anggo
 */
public class ADD_supplies extends javax.swing.JFrame {
   private String name;
    private int quantity;
    private double price;
    private int eventid;
    private String quantityStr;
    private String priceStr;
    /**
     * Creates new form ADD_ADMIN
     */
 public ADD_supplies(String name, String quantityStr, String priceStr) {
    this.name = name;
    try {
        this.quantity = Integer.parseInt(quantityStr.trim()); // Convert quantity to int
    } catch (NumberFormatException e) {
        this.quantity = 0; // Default to 0 if parsing fails
    }
    try {
        this.price = Double.parseDouble(priceStr.trim()); // Convert price to double
    } catch (NumberFormatException e) {
        this.price = 0.0; // Default to 0.0 if parsing fails
    }
    initComponents();
    loadEvents(""); // Load events when the form is initialized
}
// Getter and Setter methods
public String getName() {
    return name;
}

public int getQuantity() {
    return quantity;
}

public double getPrice() {
    return price;
}

public int getEvent_id() {
    return eventid;
}

// Add setters if needed
public void setName(String name) {
    this.name = name;
}

public void setQuantity(int quantity) {
    this.quantity = quantity;
}

public void setPrice(double price) {
    this.price = price;
}

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        eventIDLabel = new javax.swing.JTextField();
        suppliesNameLabel = new javax.swing.JTextField();
        suppliesQuantityLabel = new javax.swing.JTextField();
        addProductBT = new javax.swing.JButton();
        cancelBT = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        Dashboard_Label5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        suppliesPriceLabel = new javax.swing.JTextField();
        jScrollPane13 = new javax.swing.JScrollPane();
        eventtable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/background.png"))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("DELETE EVENT");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/addProduct.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.setAutoscrolls(true);
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 103, 100));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel5.setText("Supply Name:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 100, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel6.setText("Event id:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 120, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel7.setText("Quantity:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 80, -1));

        eventIDLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        eventIDLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventIDLabelActionPerformed(evt);
            }
        });
        jPanel1.add(eventIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 140, -1));

        suppliesNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        suppliesNameLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliesNameLabelActionPerformed(evt);
            }
        });
        jPanel1.add(suppliesNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 140, -1));

        suppliesQuantityLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        suppliesQuantityLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliesQuantityLabelActionPerformed(evt);
            }
        });
        jPanel1.add(suppliesQuantityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, 140, -1));

        addProductBT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addProductBT.setText("ADD");
        addProductBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductBTActionPerformed(evt);
            }
        });
        jPanel1.add(addProductBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 370, 102, 40));

        cancelBT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelBT.setText("CANCEL");
        cancelBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBTActionPerformed(evt);
            }
        });
        jPanel1.add(cancelBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 370, 90, 40));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("ADD ATTENDEE");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, -1, -1));

        Dashboard_Label5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Dashboard_Label5.setText("List of Events");
        jPanel1.add(Dashboard_Label5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel12.setText("Price:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 80, -1));

        suppliesPriceLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        suppliesPriceLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliesPriceLabelActionPerformed(evt);
            }
        });
        jPanel1.add(suppliesPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 140, -1));

        eventtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Event ID", "Name", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane13.setViewportView(eventtable);

        jPanel1.add(jScrollPane13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 310, 90));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 340, 420));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/mainbackground.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 390, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eventIDLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventIDLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventIDLabelActionPerformed

    private void suppliesNameLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliesNameLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_suppliesNameLabelActionPerformed

    private void suppliesQuantityLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliesQuantityLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_suppliesQuantityLabelActionPerformed

    private void addProductBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductBTActionPerformed
   // Get values from the GUI components
    String name = suppliesNameLabel.getText().trim();
    String quantityText = suppliesQuantityLabel.getText().trim();
    String priceText = suppliesPriceLabel.getText().trim();
    String eventIdText = eventIDLabel.getText().trim();

    try {
        // Convert the input fields to the correct types
        int quantity = Integer.parseInt(quantityText);
        double price = Double.parseDouble(priceText);
        int eventId = Integer.parseInt(eventIdText);

        // Call the method to add the supply
        addSupply(name, quantity, price, eventId);  
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Invalid input: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_addProductBTActionPerformed

    private void cancelBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBTActionPerformed
Admin admin = new Admin();
admin.setLocationRelativeTo(null);
        admin.setVisible(true);
        admin.getTabPane().setSelectedIndex(3); // Access TAB via the Admin instance
        setVisible(false);  
    }//GEN-LAST:event_cancelBTActionPerformed

    private void suppliesPriceLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliesPriceLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_suppliesPriceLabelActionPerformed

    /**
     * @param args the command line arguments
     */
    private void addSupply(String name, int quantity, double price, int eventId) {
        if (name == null || name.trim().isEmpty() || quantity <= 0 || price <= 0) {
            JOptionPane.showMessageDialog(null, "Invalid input values.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!isEventIdValid(eventId)) {
            JOptionPane.showMessageDialog(null, "Invalid Event ID.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        double total = 0; // Calculate the total value
        DatabaseManager.insertSupply(name, quantity,  price,total, eventId); // Pass total to the insert method

        // Clear the input fields
        suppliesNameLabel.setText("");
        suppliesQuantityLabel.setText("");
        suppliesPriceLabel.setText("");
        eventIDLabel.setText("");
    }


    private boolean isEventIdValid(int eventId) {
        String sql = "SELECT COUNT(*) FROM events WHERE id = ?";
        try (Connection connection = DatabaseManager.getConnection();
             PreparedStatement pstmt = connection.prepareStatement(sql)) {

            pstmt.setInt(1, eventId);

            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    return rs.getInt(1) > 0;
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Failed to validate event ID: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }

    private void loadEvents(String searchTerm) {
        if (eventtable == null || eventtable.getModel() == null) {
            System.out.println("eventtable or its model is null");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) eventtable.getModel();
        model.setRowCount(0);

        String sql = "SELECT * FROM events WHERE id LIKE ? OR name LIKE ? OR date LIKE ?";

        try (Connection connection = DatabaseManager.getConnection();
             PreparedStatement pstmt = connection.prepareStatement(sql)) {

            String likeSearchTerm = "%" + searchTerm + "%";
            pstmt.setString(1, likeSearchTerm);
            pstmt.setString(2, likeSearchTerm);
            pstmt.setString(3, likeSearchTerm);

            try (ResultSet rs = pstmt.executeQuery()) {
                while (rs.next()) {
                    model.addRow(new Object[]{
                        rs.getInt("id"),
                        rs.getString("name"),
                        rs.getString("date"),
                    });
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Failed to load events: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADD_supplies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> new ADD_supplies("", "0", "0.0").setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Dashboard_Label5;
    private javax.swing.JButton addProductBT;
    private javax.swing.JButton cancelBT;
    private javax.swing.JTextField eventIDLabel;
    private javax.swing.JTable eventtable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JTextField suppliesNameLabel;
    private javax.swing.JTextField suppliesPriceLabel;
    private javax.swing.JTextField suppliesQuantityLabel;
    // End of variables declaration//GEN-END:variables
}
