/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package AdminMenu.suppliesmanament;

import AdminMenu.Admin;
import ocatve.DatabaseManager;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author Anggo
 */
public class LIST_supplies extends javax.swing.JFrame {
private javax.swing.JLabel totalValueLabel;
    /**
     * Creates new form LIST_event
     */
    public LIST_supplies() {
        
        initComponents();
        loadSupplies("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Dashboard_Label5 = new javax.swing.JLabel();
        Separator6 = new javax.swing.JSeparator();
        backbutton = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        supplieastable = new javax.swing.JTable();
        upcomingevent3 = new javax.swing.JLabel();
        countsupplies = new javax.swing.JLabel();
        searchsuppliesbutton = new javax.swing.JButton();
        searchsupplieslabel = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Dashboard_Label5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Dashboard_Label5.setForeground(new java.awt.Color(255, 255, 255));
        Dashboard_Label5.setText("List of Supplies");
        getContentPane().add(Dashboard_Label5, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 40, -1, -1));

        Separator6.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(Separator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 65, 169, 10));

        backbutton.setBackground(new java.awt.Color(204, 204, 204));
        backbutton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        backbutton.setText("BACK");
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(backbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 371, 129, 32));

        supplieastable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Supply Id", "Supplies Name", "Quantity", "Price", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(supplieastable);
        if (supplieastable.getColumnModel().getColumnCount() > 0) {
            supplieastable.getColumnModel().getColumn(3).setHeaderValue("Price");
        }

        getContentPane().add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 480, 220));

        upcomingevent3.setFont(new java.awt.Font("Sitka Text", 3, 36)); // NOI18N
        upcomingevent3.setForeground(new java.awt.Color(255, 255, 255));
        upcomingevent3.setText("Events with supplies");
        getContentPane().add(upcomingevent3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, -1));

        countsupplies.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        countsupplies.setForeground(new java.awt.Color(255, 255, 255));
        countsupplies.setText("20");
        countsupplies.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                countsuppliesAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        getContentPane().add(countsupplies, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 60, 70));

        searchsuppliesbutton.setBackground(new java.awt.Color(204, 204, 204));
        searchsuppliesbutton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchsuppliesbutton.setText("SEARCH");
        searchsuppliesbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsuppliesbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(searchsuppliesbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 90, 32));

        searchsupplieslabel.setBackground(new java.awt.Color(153, 255, 255));
        searchsupplieslabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchsupplieslabelActionPerformed(evt);
            }
        });
        getContentPane().add(searchsupplieslabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, 150, 30));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/mainbackground.png"))); // NOI18N
        jLabel18.setText("jLabel4");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
    Admin admin = new Admin();
   admin.setLocationRelativeTo(null);
        admin.setVisible(true);
        admin.getTabPane().setSelectedIndex(5); // Access TAB via the Admin instance
        setVisible(false);                                    
    }//GEN-LAST:event_backbuttonActionPerformed

    private void countsuppliesAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_countsuppliesAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_countsuppliesAncestorAdded

    private void searchsuppliesbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsuppliesbuttonActionPerformed
            String searchTerm = searchsupplieslabel.getText().trim();
        loadSupplies(searchTerm);
    }//GEN-LAST:event_searchsuppliesbuttonActionPerformed

    private void searchsupplieslabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchsupplieslabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchsupplieslabelActionPerformed

    /**
     * @param args the command line arguments
     */
        
private void loadSupplies(String searchTerm) {
    DefaultTableModel model = (DefaultTableModel) supplieastable.getModel();
    model.setRowCount(0);  // Clear existing data

    // Update the SQL query to exclude the total calculation
    String sql = "SELECT id, name, quantity, price FROM supplies WHERE id LIKE ? OR name LIKE ?";

    try (Connection connection = DatabaseManager.getConnection();
         PreparedStatement pstmt = connection.prepareStatement(sql)) {

        pstmt.setString(1, "%" + searchTerm + "%");
        pstmt.setString(2, "%" + searchTerm + "%");

        try (ResultSet rs = pstmt.executeQuery()) {
            int count = 0;
            while (rs.next()) {
                int id = rs.getInt("id");
                String name = rs.getString("name");
                int quantity = rs.getInt("quantity");
                double price = rs.getDouble("price");

                // Calculate the total manually
                double total = quantity * price;

                model.addRow(new Object[]{id, name, quantity, price, total});
                count++;
            }
            countsupplies.setText(String.valueOf(count));  // Update the count label
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    public static void main(String[]args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LIST_supplies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LIST_supplies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LIST_supplies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LIST_supplies.class.getName()).log(java.utilbackbuttonLevel.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LIST_supplies().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Dashboard_Label5;
    private javax.swing.JSeparator Separator6;
    private javax.swing.JButton backbutton;
    private javax.swing.JLabel countsupplies;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JButton searchsuppliesbutton;
    private javax.swing.JTextField searchsupplieslabel;
    private javax.swing.JTable supplieastable;
    private javax.swing.JLabel upcomingevent3;
    // End of variables declaration//GEN-END:variables
}
