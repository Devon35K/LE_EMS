/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package AdminMenu.organizermaegement;

import AdminMenu.Admin;
import ocatve.DatabaseManager;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author Anggo
 */
public class LIST_organizer extends javax.swing.JFrame {

    /**
     * Creates new form LIST_event
     */
    public LIST_organizer() {
       initComponents();
        loadOrganizers("");  // Load all organizers when the frame is initialized
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Separator6 = new javax.swing.JSeparator();
        Dashboard_Label5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        organizertable = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();
        searchorgaizerlabel = new javax.swing.JTextField();
        searchorganizerbutton = new javax.swing.JButton();
        countorganizer = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Separator6.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(Separator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, -1, -1));

        Dashboard_Label5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Dashboard_Label5.setForeground(new java.awt.Color(255, 255, 255));
        Dashboard_Label5.setText("List of Organizer");
        getContentPane().add(Dashboard_Label5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        organizertable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        organizertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"ST2024-0001", "Andre M.", "Adiii@UN"},
                {"ST2024-00002", "Joemar A.", "Joemar@UN"},
                {"ST2024-0003", "Jan P.", "Jan@UN"},
                {"ST20240-0004", "Judi G.", "Judi@UN"},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Organizer ID", "Name", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        organizertable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                organizertableAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane4.setViewportView(organizertable);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, 260));

        jButton10.setBackground(new java.awt.Color(204, 204, 204));
        jButton10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton10.setText("BACK");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 340, -1, -1));

        searchorgaizerlabel.setBackground(new java.awt.Color(153, 255, 255));
        searchorgaizerlabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchorgaizerlabelActionPerformed(evt);
            }
        });
        getContentPane().add(searchorgaizerlabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 150, 30));

        searchorganizerbutton.setBackground(new java.awt.Color(204, 204, 204));
        searchorganizerbutton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchorganizerbutton.setText("SEARCH");
        searchorganizerbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchorganizerbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(searchorganizerbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 90, 32));

        countorganizer.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        countorganizer.setForeground(new java.awt.Color(255, 255, 255));
        countorganizer.setText("20");
        countorganizer.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                countorganizerAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        getContentPane().add(countorganizer, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 60, 70));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/mainbackground.png"))); // NOI18N
        jLabel16.setText("jLabel4");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        Admin admin = new Admin();
        admin.setLocationRelativeTo(null);
        admin.setVisible(true);
        admin.getTabPane().setSelectedIndex(5); // Access TAB via the Admin instance
        setVisible(false);          // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void organizertableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_organizertableAncestorAdded
     
    }//GEN-LAST:event_organizertableAncestorAdded

    private void searchorgaizerlabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchorgaizerlabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchorgaizerlabelActionPerformed

    private void searchorganizerbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchorganizerbuttonActionPerformed
         String searchTerm = searchorgaizerlabel.getText().trim();
    loadOrganizers(searchTerm);  // Load organizers based on search term
    }//GEN-LAST:event_searchorganizerbuttonActionPerformed

    private void countorganizerAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_countorganizerAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_countorganizerAncestorAdded

    /**
     * @param args the command line arguments
     */
    
private void loadOrganizers(String searchTerm) {
    DefaultTableModel model = (DefaultTableModel) organizertable.getModel();
    model.setRowCount(0);  // Clear existing data

    String sql = "SELECT * FROM organizers WHERE id = ? OR username LIKE ? OR contact LIKE ?";

    try (Connection connection = DatabaseManager.getConnection();
         PreparedStatement pstmt = connection.prepareStatement(sql)) {

        if (searchTerm.matches("\\d+")) {  // Check if the searchTerm is numeric (ID)
            pstmt.setInt(1, Integer.parseInt(searchTerm));
        } else {
            pstmt.setNull(1, java.sql.Types.INTEGER);
        }
        
        pstmt.setString(2, "%" + searchTerm + "%");  // Set the search term for username
        pstmt.setString(3, "%" + searchTerm + "%");  // Set the search term for contact

        try (ResultSet rs = pstmt.executeQuery()) {
            int count = 0;
            while (rs.next()) {
                int id = rs.getInt("id");
                String name = rs.getString("username");
                String contact = rs.getString("contact");

                model.addRow(new Object[]{id, name, contact});
                count++;
            }
            countorganizer.setText(String.valueOf(count));  // Update the count label
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LIST_organizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LIST_organizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LIST_organizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LIST_organizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LIST_organizer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Dashboard_Label5;
    private javax.swing.JSeparator Separator6;
    private javax.swing.JLabel countorganizer;
    private javax.swing.JButton jButton10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable organizertable;
    private javax.swing.JTextField searchorgaizerlabel;
    private javax.swing.JButton searchorganizerbutton;
    // End of variables declaration//GEN-END:variables
}
